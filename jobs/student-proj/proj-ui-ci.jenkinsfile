pipeline{
  agent {
      label 'MAVEN'
  }

  environment {
    SONAR_TOKEN=credentials('SONAR_TOKEN')
    NEXUS=credentials('NEXUS')
  }

  stages{
    
    stage('Clone Repo') {
      steps {
        git credentialsId: 'git', url: 'https://github.com/cheerlavamsi/studentapp-ui.git'
      }
    }
    
    stage('Compile Code') {
      steps {
        sh '''
          mvn compile
        '''
      }
    }

    stage('Quality Check') {
      steps {
        withSonarQubeEnv('SonarQubeServer') {
          sh '''
          mvn sonar:sonar   -Dsonar.projectKey=student-ui   -Dsonar.host.url=http://sonarqube.devopsb42.tk:9000   -Dsonar.login=${SONAR_TOKEN}
        '''
        }
      }
    }

    stage("Quality Gate") {
      steps {
        timeout(time: 1, unit: 'HOURS') {
          waitForQualityGate abortPipeline: true
        }
      }
    }

    stage('Upload Artifacts') {
      steps {
        sh '''
          mvn -s settings.xml package deploy -DNEXUS_USR=${NEXUS_USR} -DNEXUS_PSW=${NEXUS_PSW}
        '''
      }
    }

  }
}
