pipeline{
  agent {
      label 'MAVEN'
  }

  environment {
    SONAR_TOKEN=credentials('SONAR_TOKEN')
    NEXUS=credentials('NEXUS')

  }

  stages{
    
    stage('Clone Repo') {
      steps {
        git credentialsId: 'git', url: 'https://github.com/cheerlavamsi/studentapp-documents.git'
      }
    }
    
    stage('Compile Code') {
      steps {
        sh '''
          mvn compile
        '''
      }
    }

    stage('Quality Check') {
      steps {
        withSonarQubeEnv('SonarQubeServer') {
        sh '''
          mvn sonar:sonar \
          -Dsonar.projectKey=student-ui \
          -Dsonar.host.url=http://54.162.72.66:9000 \
          -Dsonar.login=8f23b98475acb62815f0b22fbae157e3542c9fc9
        '''
        }
      }
    }

    stage("Quality Gate") {
      steps {
        timeout(time: 1, unit: 'HOURS') {
          waitForQualityGate abortPipeline: true
        }
      }
    }

    stage("Upload Artifacts") {
      steps{
        sh  '''
          mvn -s settings.xml package deploy  -DNEXUS_USR=${NEXUS_USR} -DNEXUS_PSW=${NEXUS_PSW}
         
        '''
      }
    }

    stage('Get URL') {
      agent {
        label "MASTER"
      }
      steps {
        sh '''
         cd /var/lib/jenkins/jobs/studentapp-project/jobs/Ci-PipeLine/builds/$BUILD_NUMBER
         SNAP_VERSION=$(grep Uploaded log | head -1  |xargs -n1 | grep ^http | awk -F / '{print $9}')
         NEXUS_VERSION=$(grep Uploaded log | head -1  |xargs -n1 | grep ^http | awk -F / '{print $NF}' | sed -e 's/\\*\\*\\*\\*app-//' | sed -e 's/.war//')
         echo "http://54.197.105.88:8081/repository/studentapp-snapshots/com/jdevs/studentapp/$SNAP_VERSION/studentapp-$NEXUS_VERSION.war" >/tmp/out1
  
        '''
      }
    }

   
  }
}
